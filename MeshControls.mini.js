THREE.MeshControls=function(camera,scene,container){if(scene===undefined||scene.nodeName){throw"THREE.MeshControls Scene Parameter Not Set Properly"}else if(container===undefined||container.nodeName===undefined||container===undefined){throw"THREE.MeshControls domElement Parameter Not Set Properly"}else{this.container=container;this.camera=camera;this.objects=[];this.mouseOverOnce=false}var _this=this,_plane=new THREE.Plane,_3DPlane=generatePlane(),_raycaster=new THREE.Raycaster,_mouse=new THREE.Vector2,_offset=new THREE.Vector3,_intersection=new THREE.Vector3,_direction=new THREE.Vector3,_scale=new THREE.Vector3(1,1,1),_displacedMap=null,_lastKnownTarget=null,_previousPosition={},_selected=null,_hovered=null,flags={btn:{isLeftBtn:false,isRightBtn:false,isMiddleBtn:false},click:false,moving:false,generatedPlane:false,setLastPosition:false,dragging:false,hoverEventFired:false};this._raySet=function(){if(_this.camera instanceof THREE.OrthographicCamera){_this._vector.set(_mouse.x,_mouse.y,-1).unproject(_this.camera);_direction.set(0,0,-1).transformDirection(_this.camera.matrixWorld);_raycaster.set(_this._vector,_this._direction)}else{var vector=new THREE.Vector3(_mouse.x,_mouse.y,1);vector.unproject(_this.camera);_raycaster.set(_this.camera.position,vector.sub(_this.camera.position).normalize())}};function generatePlane(){var floorGeometry=new THREE.PlaneGeometry(2e3,2e3,10,10),floorMaterial=new THREE.MeshBasicMaterial({color:16777215,side:THREE.DoubleSide}),plane=new THREE.Mesh(floorGeometry,floorMaterial);floorMaterial.transparent=true;floorMaterial.opacity=0;plane.name="_plane";plane.rotateX(Math.PI/2);plane.position.copy(camera.position);plane.position.y=0;return plane}function toThreeCords(clientX,clientY,domElement){var rect=domElement===undefined?_this.container.getBoundingClientRect():domElement.getBoundingClientRect();_mouse.x=(clientX-rect.left)/rect.width*2-1;_mouse.y=-((clientY-rect.top)/rect.height)*2+1;return{x:_mouse.x,y:_mouse.y}}function setMouseBtn(event){switch(event.button){case 0:flags.btn.isLeftBtn=true;flags.btn.isRightBtn=false;flags.btn.isMiddleBtn=false;break;case 1:flags.btn.isLeftBtn=false;flags.btn.isRightBtn=false;flags.btn.isMiddleBtn=true;break;case 2:flags.btn.isLeftBtn=false;flags.btn.isRightBtn=true;flags.btn.isMiddleBtn=false;break}}function addListeners(){container.addEventListener("mousemove",onDocumentMouseMove,false);container.addEventListener("mousedown",onDocumentMouseDown,false);container.addEventListener("mouseup",onDocumentMouseCancel,false);container.addEventListener("mouseleave",onDocumentMouseCancel,false);document.addEventListener("keydown",onKeyDown,false);document.addEventListener("keypress",onKeyPress,false);document.addEventListener("keypress",onKeyUp,false)}function removeListeners(){container.removeEventListener("mousemove",onDocumentMouseMove,false);container.removeEventListener("mousedown",onDocumentMouseDown,false);container.removeEventListener("mouseup",onDocumentMouseCancel,false);container.removeEventListener("mouseleave",onDocumentMouseCancel,false);document.removeEventListener("keydown",onKeyDown,false);document.removeEventListener("keypress",onKeyPress,false);document.removeEventListener("keypress",onKeyUp,false)}function onDocumentMouseMove(event){event.preventDefault();_lastKnownTarget=event.target;toThreeCords(event.clientX,event.clientY);_this._raySet();var movingRay=_raycaster.intersectObjects(_this.objects,true);if(_selected&&_selected.draggable===true&&flags.btn[_selected.draggableOn]===true){_displacedMap=_raycaster.intersectObject(_3DPlane);var pos=(new THREE.Vector3).copy(_displacedMap[0].point.sub(_offset));pos.x*=_scale.x;pos.y*=_scale.y;pos.z*=_scale.z;_selected.position.copy(pos);flags.dragging=true;_this.dispatchEvent({type:"drag",object:_selected})}if(movingRay.length>0&&flags.dragging===false){_hovered=movingRay[0];if(_this.mouseOverOnce===true){if(flags.hoverEventFired===false){_this.dispatchEvent({type:"mouseover",selected:_hovered});flags.hoverEventFired=true}}else{_this.dispatchEvent({type:"mouseover",selected:_hovered})}}else if(movingRay.length===0&&flags.dragging===false){if(_hovered!==null){_this.dispatchEvent({type:"mouseleave",selected:_hovered});_hovered=null;flags.hoverEventFired=false}}_this.dispatchEvent({type:"mousemove",event:event,btn:flags.btn,intersects:movingRay});_previousPosition.x=event.clientX;_previousPosition.y=event.clientY}function onDocumentMouseDown(event){event.preventDefault();setMouseBtn(event);_this._raySet();var intersects=_raycaster.intersectObjects(_this.objects,true);if(intersects.length>0){_this.dispatchEvent({type:"click",object:intersects[0],btn:flags.btn,intersects:intersects});if(flags.btn[intersects[0].object.draggableOn]===true){if(flags.generatedPlane===false&&_this.map===undefined){scene.add(_3DPlane);flags.generatedPlane=true}else if(flags.generatedPlane===true){}else{_this.map.name="_plane";_3DPlane=_this.map}_selected=intersects[0].object}if(_selected&&_selected.draggable===true&&flags.btn[_selected.draggableOn]===true){_this.dispatchEvent({type:"dragstart",object:_selected,btn:flags.btn,intersects:intersects})}}_this.dispatchEvent({type:"mousedown",event:event,btn:flags.btn,intersects:intersects})}function onDocumentMouseCancel(event){event.preventDefault();flags.setLastPosition=false;flags.click=false;_lastKnownTarget=null;setMouseBtn(event);_this._raySet();container.blur();var mouseUpSelected=_raycaster.intersectObjects(_this.objects,true);if(mouseUpSelected.length>0){_this.dispatchEvent({type:"mouseup",object:mouseUpSelected,btn:flags.btn})}if(_selected&&flags.btn[_selected.draggableOn]===true){flags.dragging=false;_this.dispatchEvent({type:"dragend",object:_selected,intersects:mouseUpSelected});_selected=null}_this.dispatchEvent({type:"mouseup",event:event,btn:flags.btn})}function onKeyDown(event){if(_lastKnownTarget===arenaDom.element){_this.dispatchEvent({type:"keydown",event:event})}}function onKeyPress(event){if(_lastKnownTarget===arenaDom.element){_this.dispatchEvent({type:"keypress",event:event})}}function onKeyUp(event){if(_lastKnownTarget===arenaDom.element){_this.dispatchEvent({type:"keyup",event:event})}}this.attach=function(object,options){if(options===undefined||options===undefined&&options.draggable===undefined){options={};options.draggable=false}else{object.draggable=options.draggable}if(options.draggableBtnOn===undefined){object.draggableOn="isLeftBtn"}else{object.draggableOn=options.draggableOn}if(object instanceof THREE.Mesh){this.objects.push(object)}else{this.objects.push(object);for(var i=0;i<object.children.length;i++){object.children[i].userDataParent=object}}};this.detach=function(object){var item=_this.objects.indexOf(object);this.objects.splice(item,1)};this.dispose=function(object){_this.detach(object)};this.disposeAll=function(){_this.objects.length=0;removeListeners()};this.removeListeners=function(){removeListeners()};this.setMap=function(map){this.map=map};this.toThreeCords=toThreeCords;addListeners()};THREE.MeshControls.prototype=Object.create(THREE.EventDispatcher.prototype);THREE.MeshControls.prototype.constructor=THREE.MeshControls;